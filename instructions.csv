Instruction 
 [Operations]
Control Logic
INIT 
 [STro(r, "out"), RAMin],
 [ALUout, MARLin STALin, TMPin,ALUINR],
 [STro(r, "out"), RAMin],
 [ALUout, MARLin STALin, TMPin,ALUINR],
 [STro(r, "out"), RAMin],
 [ALUout, MARLin STALin, TMPin,ALUINR],
 [STro(r, "out"), RAMin],
 [ALUout, MARLin STALin, TMPin,ALUINR],
 [STro(r, "out"), RAMin],
 [ALUout, MARLin STALin, TMPin,ALUINR],
 [STro(r, "out"), RAMin],
 [ALUout, MARLin STALin, TMPin,ALUINR],
 [STro(r, "out"), RAMin],
 [ALUout, MARLin STALin, TMPin,ALUINR],
 [STro(r, "out"), RAMin],
 [ALUout, MARLin STALin, TMPin,ALUINR],
 [STro(r, "out"), RAMin],
 [ALUout, MARLin STALin, TMPin,ALUINR],
 [STro(r, "out"), RAMin],
 [ALUout, MARLin STALin, TMPin,ALUINR],
 [STro(r, "out"), RAMin],
 [ALUout, MARLin STALin, TMPin,ALUINR],
 [STro(r, "out"), RAMin, Iro(r, "in"), ],
 [STCR]
Data Transfer
"MOV r1, r2",r1out,r2in,,
"MOV M, r",Lout,MARLin,,
 [Hout, MARHin],
 [RAMout, ro(r, "in")]
"MOV r, M",Lout,MARLin,,
 [Hout, MARHin],
 [ro(r, "out"), RAMin]
"MVI data, r",PCLout,MARLin,,
 [PCHout, MARHin],
 [RAMout, ro(r, "in"),  CE]
"MVI data, M",PCLout,MARLin,,
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [Lout, MARLin],
 [Hout, MARHin],
 [TMPout, RAMin]
"LXI data, rp",PCLout,MARLin,,
 [PCHout, MARHin],
 [RAMout, ro(rp[1], "in"),  CE],
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, ro(rp[0], "in"),  CE]
LDA addr 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, MARHin,  CE],
 [ALUout, MARLin],
 [RAMout, Ain]
STA addr 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, MARHin,  CE],
 [ALUout, MARLin],
 [Aout, RAMin]
LDHL addr 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, MARHin,  CE],
 [ALUout, MARLin],
 [RAMout, Lin],
 [MARLout, TMPin],
 [ALUout, MARLin] + ALUINR,
 [MARHout, TMPin],
 [ALUout, MARHin] + ALUINC,
 [RAMout, Hin]
STHL addr 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, MARHin,  CE],
 [ALUout, MRLin],
 [Lout, RAMin],
 [MARLout, TMPin],
 [ALUout, MARLin] + ALUINR,
 [MARHout, TMPin],
 [ALUout, MARHin] + ALUINC,
 [Hout, RAMin]
LDAX rp 
 [ro(rp[1], "out"), MARLin],
 [ro(rp[0], "out"), MARHin],
 [RAMout, Ain]
STAX rp 
 [ro(rp[1], "out"), MARLin],
 [ro(rp[0], "out"), MARHin],
 [Aout, RAMin]
XCHG 
 [Lout, TMPin],
 [Eout, Lin],
 [ALUout, Ein],
 [Hout, TMPin],
 [Dout, Hin],
 [ALUout, Din]
Arithmetic
ADD r 
 [ro(r, "out"), TMPin],
 [ALUout, Ain] + ALUADD
ADD M 
 [Lout, MARLin],
 [Hout, MARHin],
 [RAMout, TMPin],
 [ALUout, Ain] + ALUADD
ADC r 
 [ro(r, "out"), TMPin],
 [ALUout, Ain] + ALUADC
ADC M 
 [Lout, MARLin],
 [Hout, MARHin],
 [RAMout, TMPin],
 [ALUout, Ain,  ALUADC]
ADI data 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [ALUout, Ain] + ALUADD
ACI data 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [ALUout, Ain] + ALUADC
DAD rp 
 [Lout, Ain],
 [ro(rp[1], "out"), TMPin],
 [Aout, Lin] + ALUADD,
 [Hout, Ain],
 [ro(rp[0], "out"), TMPin],
 [Aout, Hin] + ALUADC
SUB r 
 [ro(r, "out"), TMPin],
 [ALUout, Ain] + ALUSUB
SUB M 
 [Lout, MARLin],
 [Hout, MARHin],
 [RAMout, TMPin],
 [ALUout, Ain] + ALUSUB
SBB r 
 [ro(r, "out"), TMPin],
 [ALUout, Ain] + ALUSBB
SBB M 
 [Lout, MARLin],
 [Hout, MARHin],
 [RAMout, TMPin],
 [ALUout, Ain] + ALUSBB
SUI data 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [ALUout, Ain] + ALUSUB
SBI data 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [ALUout, Ain] + ALUSBB
INR r 
 [ro(r, "out"), TMPin],
 [ALUout, ro(r, "in")] + ALUINR
INR M 
 [Lout, MARLin],
 [Hout, MARHin],
 [RAMout, TMPin],
 [ALUout, RAMin] + ALUINR
DCR r 
 [ro(r, "out"), TMPin],
 [ALUout, ro(r, "in")] + ALUDCR
DCR M 
 [Lout, MARLin],
 [Hout, MARHin],
 [RAMout, TMPin],
 [ALUout, RAMin] + ALUDCR
INX rp 
 [ro(rp[1], "out"), TMPin],
 [ALUout, ro(rp[1], "in")] + ALUINR,
 [ro(rp[0], "out"), TMPin],
 [ALUout, ro(rp[0], "in")] + ALUINC
DCX rp 
 [ro(rp[1], "out"), TMPin],
 [ALUout, ro(rp[1], "in")] + ALUDCR,
 [ro(rp[0], "out"), TMPin],
 [ALUout, ro(rp[0], "in")] + ALUDCB
Logic
ANA r 
 [ro(r, "out"), TMPin],
 [ALUout, Ain] + ALUAND
ANA M 
 [Lout, MARLin],
 [Hout, MARHin],
 [RAMout, TMPin],
 [ALUout, Ain] + ALUAND
ANI data 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [ALU out, A in] + ALUAND
ORA r 
 [ro(r, "out"), TMPin],
 [ALUout, Ain] + ALUOR
ORA M 
 [Lout, MARLin],
 [Hout, MARHin],
 [RAMout, TMPin],
 [ALUout, Ain] + ALUOR
ORI data 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [ALU out, A in] + ALUOR
XRA r 
 [ro(r, "out"), TMPin],
 [ALUout, Ain] + ALUXOR
XRA M 
 [Lout, MARLin],
 [Hout, MARHin],
 [RAMout, TMPin],
 [ALUout, Ain] + ALUXOR
XRI data 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [ALUout, Ain] + ALUXOR
CMA 
 [ALUout, Ain] + ALUCMA
CMC 
 [] + ALUCMC
STC 
 [] + ALUSTC
CMP r 
 [ro(r, "out"), TMPin],
 [] + ALUSUB
CMP M 
 [Lout, MARLin],
 [Hout, MARHin],
 [RAMout, TMPin],
 [] + ALUSUB
CPI data 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin,  CE],
 [] + ALUSUB
RRC 
 [ALUout, Ain] + ALURRC
RAL 
 [ALUout, Ain] + ALURAL
RAR 
 [ALUout, Ain] + ALURAR
Branch
JMP addr 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin, CE],
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, PCHin],
 [ALUout, PCLin]
"JZ addr
JNZ addr
JC addr
JNC addr
JP addr
JM addr
JPE addr
JPO addr" 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin, CE],
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, PCHin],
 [ALUout, PCLin]
CALL addr 
 [SPLout, TMPin],
 [ALUout, MARLin] + ALUDCR,
 [SPHout, TMPin],
 [ALUout, MARHin] + ALUDCB,
 [PCHout, RAMin],
 [MARLout, TMPin],
 [ALUout, MARLin, SPLin,ALUDCR],
 [MARHout, TMPin],
 [ALUout, MARHin, SPHin,ALUDCB],
 [PCLout, RAMin],
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, TMPin, CE],
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, PCHin, CE],
 [ALUout, PCLin]
RET 
 [SPLout, MARLin],
 [SPHout, MARHin],
 [RAMout, PCLin],
 [MARLout, TMPin],
 [ALUout, MARLin] + ALUINR,
 [MARHout, TMPin],
 [ALUout, MARHin] + ALUINC,
 [RAMout, PCHin],
 [MARLout, TMPin],
 [ALUout, SPLin] + ALUINR,
 [MARHout, TMPin],
 [ALUout, SPHin] + ALUINC
Stack and Machine Control
PUSH rp 
 [SPLout, TMPin],
 [ALUout, MARLin] + ALUDCR,
 [SPHout, TMPin],
 [ALUout, MARHin] + ALUDCB,
 [ro(rp[0], "out"), RAMin],
 [MARLout, TMPin],
 [ALUout [ MARLin,  SPLin] + ALUDCR, ],
 [MARHout [ TMPin,   ], ],
 [ALUout [ MARHin,  SPHin] + ALUDCB, ],
 [ro(rp[1], "out") [ RAMin,   ], ]
PUSH PSW 
 [SPLout [ TMPin,   ], ],
 [ALUout [ MARLin,  ALUDCR], ],
 [SPHout [ TMPin,   ], ],
 [ALUout [ MARHin,  ALUDCB], ],
 [Aout [ RAMin,   ], ],
 [MARLout [ TMPin,   ], ],
 [ALUout [ MARLin,  SPLin] + ALUDCR, ],
 [MARHout [ TMPin,   ], ],
 [ALUout [ MARHin,  SPHin] + ALUDCB, ],
 [Fout [ RAMin,   ], ]
POP rp 
 [SPLout [ MARLin,   ], ],
 [SPHout [ MARHin,   ], ],
 [RAMout [ ro(rp[1], "in"),   ], ],
 [MARLout [ TMPin,   ], ],
 [ALUout [ MARLin,  ALUINR], ],
 [MARHout [ TMPin,   ], ],
 [ALUout [ MARHin,  ALUINC], ],
 [RAMout [ ro(rp[0], "in"),   ], ],
 [MARLout [ TMPin,   ], ],
 [ALUout [ SPLin,  ALUINR], ],
 [MARHout [ TMPin,   ], ],
 [ALUout [ SPHin,  ALUINC], ]
POP PSW 
 [SPLout [ MARLin,   ], ],
 [SPHout [ MARHin,   ], ],
 [RAMout [ Fin,   FinSel], ],
 [MARLout [ TMPin,   ], ],
 [ALUout [ MARLin,  ALUINR], ],
 [MARHout, TMPin],
 [ALUout, MARHin] + ALUINC,
 [RAMout, Ain],
 [MARLout, TMPin],
 [ALUout, SPLin] + ALUINR,
 [MARHout, TMPin],
 [ALUout, SPHin] + ALUINC
SPAI data 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, Ain,  CE],
 [SPLout, TMPin],
 [ALUout, SPLin] + ALUADD,
 [SPHout, TMPin],
 [ALUout, SPHin] + ALUINC
SPSI data 
 [PCLout, MARLin],
 [PCHout, MARHin],
 [RAMout, Ain,  CE],
 [SPLout, TMPin],
 [ALUout, SPLin] + ALUSUB,
 [SPHout, TMPin],
 [ALUout, SPHin] + ALUDCB
XTHL 
 [SPLout, MARLin],
 [SPHout, MARHin],
 [RAMout, TMPin],
 [Lout, RAMin],
 [ALUout, Lin],
 [MARLout, TMPin],
 [ALUout, MARLin] + ALUINR,
 [MARHout, TMPin],
 [ALUout, MARHin] + ALUINC,
 [RAMout, TMPin],
 [Hout, RAMin],
 [ALUout, Hin]
SPHL 
 [L out, SPL in],
 [H out, SPH in]
HLT 
 [HLTset]
NOP